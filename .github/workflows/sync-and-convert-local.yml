name: "Sync + 本地化 Script-Hub 转换（增强版，含启动检测）"

on:
  workflow_dispatch: {}
  schedule:
    - cron: "30 2 * * *"    # 每天 UTC 02:30 自动运行
  push:
    paths:
      - 'script-hub-list.json'
      - '.github/scripts/convert_hub_local.py'
      - '.github/scripts/sync-hub.py'   # 如需同步其它脚本，可保留此项；否则可删除

jobs:
  sync_and_convert:
    runs-on: ubuntu-latest

    env:
      SCRIPT_HUB_API_BASE: "http://127.0.0.1:9100"
      GITHUB_RAW_BASE: ${{ secrets.GITHUB_RAW_BASE }}
      CLEAN_MODE: "true"
      BARK_PUSH_URL: ${{ secrets.BARK_PUSH_URL }}
      SERVERCHAN_SEND_KEY: ${{ secrets.SERVERCHAN_SEND_KEY }}
      WECHAT_WEBHOOK_URL: ${{ secrets.WECHAT_WEBHOOK_URL }}
      TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
      TG_USER_ID: ${{ secrets.TG_USER_ID }}
      NOTIFY_LANG: ${{ secrets.NOTIFY_LANG }}
      FORCE_NOTIFY: ${{ secrets.FORCE_NOTIFY }}
      BARK_ICON_URL: ${{ secrets.BARK_ICON_URL }}

    steps:
      # -------------------------------------------------------------------
      # 1. Checkout：拉取仓库并保留凭据，以便后续 git push 使用 GITHUB_TOKEN
      - name: Checkout 仓库
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      # -------------------------------------------------------------------
      # 2. 配置 Git 用户信息，避免 “Please tell me who you are” 错误
      - name: 配置 Git 用户信息
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # -------------------------------------------------------------------
      # 3. 安装 Node.js（≥18）
      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # -------------------------------------------------------------------
      # 4. Clone 或 update Script-Hub 后端
      - name: 拉取 Script-Hub 后端源码
        run: |
          if [ ! -d ".github/scripts/script-hub-backend" ]; then
            git clone https://github.com/Script-Hub-Org/Script-Hub.git .github/scripts/script-hub-backend
          else
            cd .github/scripts/script-hub-backend && git pull
          fi

      # -------------------------------------------------------------------
      # 5. 安装依赖并启动 Script-Hub 服务（含检测）
      - name: 安装 & 启动 Script-Hub 后端（含就绪检测）
        run: |
          cd .github/scripts/script-hub-backend

          # 1) 安装 pnpm，如果已安装则此步可跳过
          npm install -g pnpm || true

          # 2) 安装后端依赖
          pnpm install

          # 3) 后台启动 Script-Hub 服务（假设版本需用 `serve` 子命令）
          nohup npx script-hub serve --port 9100 >/dev/null 2>&1 &

          # 4) 等待服务启动，就绪检测（最多等 60 秒，每 5 秒检测一次）
          for i in {1..12}; do
            if curl -sI http://127.0.0.1:9100/health | grep -q "200"; then
              echo "✅ Script-Hub 后端已启动 (port 9100)"
              break
            fi
            echo "⌛ 等待 Script-Hub 后端启动… ($i)"
            sleep 5
          done

          # 最后再做一次简单的测试
          if ! curl -sI http://127.0.0.1:9100/health | grep -q "200"; then
            echo "❌ Script-Hub 后端启动失败，强制退出"
            exit 1
          fi

      # -------------------------------------------------------------------
      # 6. 安装 Python，用于执行转换脚本
      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # -------------------------------------------------------------------
      # 7. 安装 Python 依赖 requests
      - name: 安装 Python 依赖
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # -------------------------------------------------------------------
      # 8. （可选）运行 sync-hub.py 同步其它脚本到本地
      #    如果不需要，注释或删除以下三行即可
      - name: 运行 sync-hub.py（可选同步步骤）
        run: |
          python .github/scripts/sync-hub.py

      # -------------------------------------------------------------------
      # 9. 运行本地化转换脚本：convert_hub_local.py
      - name: 从 JSON 转换并推送
        run: |
          python .github/scripts/convert_hub_local.py

      # -------------------------------------------------------------------
      # 10. （可选）检查输出目录结构，便于在 Actions 日志中查看
      - name: 打印 SCRIPT-HUB-OUTPUT 目录
        run: |
          echo "---- SCRIPT-HUB-OUTPUT 目录 ----"
          find SCRIPT-HUB-OUTPUT -maxdepth 3 | sed 's/^/  /'
